#manager application
#routes jobs to kjob managers
genesis{
    include "common"
    akka {
            remote{
                netty{
                    #genesis application machine ip
                    hostname = "{% if genesis %}{{genesis['hostname']}}{% endif %}"
                    port = 2552
                }
            }
      }
      jobManagerService{
       jobManagers=[
        {%if genesis %}
	     {% for jm in genesis['jobManagers'] %}
	      {% if loop.last %}
	       	{ip="{{jm['ip']}}", port=2554}
	      {% else %}
	       	{ip="{{jm['ip']}}", port=2554},
	      {% endif %}
	     {% endfor %} {% endif %}] 
      }
}

#worker application
#service that is available on multiple nodes to calculate scores
#this block will have to be updated for each compute node this service is deployed to
worker{
  include "common"

  akka {
        remote{
            netty{
                #worker ip
                hostname = "{% if worker %}{{worker['ip']}}{% endif %}"
                port = 2553
            }
        }
  }

  numWorkersPerNode = {% if worker['numWorkers'] %}{{worker['numWorkers']}}{% else %}{{4}}{% endif %}

  #use to indicate if a the hpo term pair wise similarities have been precomputed in a
  #serialized file.
  hpoAnnotatingPairWiseSims{
    useFile = "true"
    filePath = "./hpoPairSims.ser"
  }
}

#job manager application
#service that is available on multiple nodes to manage job execution
#this block will have to be updated for each compute node this service is deployed to
jobmanager{
  include "common"

  akka {
        remote{
            netty{
                #job Manager ip
                hostname = "{% if jobmanager %}{{jobmanager['ip']}}{% endif %}"
                port = 2554
            }
        }
  }
  workerService{
	workers=[
	{%if jobmanager %}
	  {% for w in jobmanager['workers'] %}
	    {% if loop.last %}
	      {ip="{{w['ip']}}", port=2553, storagePort = 2555}
	    {% else %}
	      {ip="{{w['ip']}}", port=2553, storagePort = 2555},
	    {% endif %}
	  {% endfor %} {% endif %}]
  }
}

#information for storage application
storage{
 include "common"

   akka {
         remote{
             netty{
                 #local host
                 hostname = "{% if worker %}{{worker['ip']}}{% endif %}"
                 port = 2555
             }
         }
   }
}

#Amazon Web Services Information
AWS{
  {%if awscreds %}{{awscreds}} {% endif %}
  S3{
    use="{{s3['use']}}"
    name="{{s3['bucketName']}}"
  }
  EC2{
    #if shutdown true, all EC2 instances will attempt terminate when genesis exits
    terminate={%if ec2 %}"{{ec2['terminate']}}"{% else %}"false"{% endif %}
    
    instanceIDS=[
    {%if ec2 %}
    	{% for id in ec2['instanceIDs'] %}
    	   {%if loop.last %}
    	       "{{id}}"
    	   {% else %}
    	       "{{id}}",
    	   {% endif %}
    	{% endfor %}{% endif %}]
    		
    genesisInstanceId={%if ec2 %}"{{ec2['genesisid']}}"{% else %}""{% endif %}
    
  }
}

filestorage{
    root = "./data"
}

#information for notifications when app completes
notifications{
{{notifications}}
}
